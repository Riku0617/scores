{"ast":null,"code":"import { PossessionTeam, BallPlace, Punt, EndMakeDrive, GetPoints, KickOff, InterceptionFunc, Offense } from './EntryPoint';\n\nconst Allprocessor = _ref => {\n  let {\n    data,\n    homeTeam,\n    awayTeam,\n    ballPlace,\n    ballPossession,\n    ballOn,\n    down,\n    distance,\n    setPlayAmount,\n    setYardsDrived,\n    gameData,\n    setBallPlace,\n    setBallPossession,\n    setBallOn,\n    setDriveId,\n    setDown,\n    setDistance,\n    setHomePoints,\n    setAwayPoints\n  } = _ref;\n  var state = {\n    BallPlaceResult: ballPlace\n  }; // BallOnのヤードに関して、Offenceでgainした時の処理\n\n  if (data.o_or_k === \"Offense\") {\n    Offense({\n      data,\n      ballPlace,\n      state,\n      ballPossession,\n      homeTeam,\n      awayTeam,\n      setBallOn,\n      ballOn,\n      setBallPlace,\n      down,\n      distance,\n      setBallPossession,\n      setDriveId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n  } // Puntの時の処理\n\n\n  if (data.o_or_k === \"Punt\") {\n    EndMakeDrive({\n      data,\n      ballPossession,\n      homeTeam,\n      awayTeam,\n      setBallPossession,\n      setDriveId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n    Punt({\n      data,\n      ballOn,\n      setBallOn,\n      ballPlace,\n      setBallPlace,\n      state,\n      ballPossession\n    });\n  } // FGの処理// TDの処理\n\n\n  console.log(data.ball_on_result);\n\n  if (data.kick_isgood === \"Good\" || data.ball_on_result <= 0) {\n    GetPoints({\n      data,\n      ballPossession,\n      setHomePoints,\n      setAwayPoints,\n      setBallOn\n    });\n    EndMakeDrive({\n      data,\n      ballPossession,\n      homeTeam,\n      awayTeam,\n      setBallPossession,\n      setDriveId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n    setBallPlace(!ballPlace);\n    console.log(\"Get Points\");\n  } else if (data.o_or_k === \"FG\" && data.kick_isgood === \"No Good\") {\n    EndMakeDrive({\n      data,\n      ballPossession,\n      homeTeam,\n      awayTeam,\n      setBallPossession,\n      setDriveId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n  } // Kick Off処理\n\n\n  if (data.o_or_k === \"Kick Off\") {\n    KickOff({\n      data,\n      ballOn,\n      ballPossession,\n      setBallOn,\n      setBallPossession,\n      ballPlace,\n      setBallPlace,\n      state\n    }); // setBallPossession(!ballPossession)\n  } // INTの処理//Fumbleの処理　=> TurnOver,BallPlace,interceptされた場所、FumbelRecoverされた場所,return_yards\n  // INT=> Pass=>INT=>INT_PLACE=>RETURN_YARDS=>TURNOVER(BALLPOSSESSIONの変化)\n\n\n  if (data.pass_iscomplete === \"Interception\" || data.result === \"Fumble\") {\n    setBallPossession(!ballPossession);\n    InterceptionFunc({\n      data,\n      ballPlace,\n      ballPossession,\n      setBallPlace,\n      setBallPossession,\n      setBallOn,\n      state\n    });\n    EndMakeDrive({\n      data,\n      ballPossession,\n      homeTeam,\n      awayTeam,\n      setBallPossession,\n      setDriveId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n  } // ボール保持チームが変わった時の処理\n\n\n  PossessionTeam(data, ballPossession, homeTeam, awayTeam); // Ballがどちらの陣地にあるかに関する処理\n\n  BallPlace(data, ballPlace, state.BallPlaceResult, homeTeam, awayTeam);\n  return null;\n};\n\n_c = Allprocessor;\nexport default Allprocessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Allprocessor\");","map":{"version":3,"names":["PossessionTeam","BallPlace","Punt","EndMakeDrive","GetPoints","KickOff","InterceptionFunc","Offense","Allprocessor","data","homeTeam","awayTeam","ballPlace","ballPossession","ballOn","down","distance","setPlayAmount","setYardsDrived","gameData","setBallPlace","setBallPossession","setBallOn","setDriveId","setDown","setDistance","setHomePoints","setAwayPoints","state","BallPlaceResult","o_or_k","console","log","ball_on_result","kick_isgood","pass_iscomplete","result"],"sources":["/Users/toimotoriku/Desktop/gamecast1.1/form/src/PlayForm/functions/AllProcessor.ts"],"sourcesContent":["import React from 'react'\nimport { Game } from '../../Alies'\nimport { Play } from '../../Alies'\nimport { PossessionTeam,BallPlace, Punt,EndMakeDrive, GetPoints,KickOff, InterceptionFunc,Offense } from './EntryPoint'\n\n\ntype Props = {\n    data:Play\n    homeTeam:string\n    awayTeam:string\n    ballPlace:boolean\n    ballPossession:boolean\n    ballOn:number\n    down:number\n    distance:number\n    gameData: Game[]\n    setPlayAmount:React.Dispatch<React.SetStateAction<number>>\n    setYardsDrived:React.Dispatch<React.SetStateAction<number>>\n    setBallPlace:React.Dispatch<React.SetStateAction<boolean>>\n    setBallPossession:React.Dispatch<React.SetStateAction<boolean>>\n    setBallOn:React.Dispatch<React.SetStateAction<number>>\n    setDriveId:React.Dispatch<React.SetStateAction<number>>\n    setDown:React.Dispatch<React.SetStateAction<number>>\n    setDistance:React.Dispatch<React.SetStateAction<number>>\n    setHomePoints:React.Dispatch<React.SetStateAction<number>>\n    setAwayPoints:React.Dispatch<React.SetStateAction<number>>\n}\n\nconst Allprocessor:React.FC<Props> = ({data,homeTeam,awayTeam,ballPlace,ballPossession,ballOn,down,distance,setPlayAmount,setYardsDrived, gameData,setBallPlace,setBallPossession,setBallOn,setDriveId,setDown,setDistance,setHomePoints,setAwayPoints}) => {\n\n    var state = {\n        BallPlaceResult:ballPlace\n    }\n\n\n    // BallOnのヤードに関して、Offenceでgainした時の処理\n    if (data.o_or_k === \"Offense\"){\n        Offense({data,ballPlace,state,ballPossession,homeTeam,awayTeam,setBallOn,ballOn,setBallPlace,down,distance,setBallPossession,setDriveId,setDown,setDistance,setPlayAmount,setYardsDrived})\n    }\n    \n\n    // Puntの時の処理\n    if (data.o_or_k === \"Punt\"){\n        EndMakeDrive({data,ballPossession,homeTeam,awayTeam,setBallPossession,setDriveId,setDown,setDistance,setPlayAmount,setYardsDrived})\n        Punt({data,ballOn,setBallOn,ballPlace,setBallPlace,state,ballPossession})\n    }\n    // FGの処理// TDの処理\n    console.log(data.ball_on_result)\n    if (data.kick_isgood === \"Good\" || data.ball_on_result<=0){\n        GetPoints({data,ballPossession,setHomePoints,setAwayPoints,setBallOn})\n        EndMakeDrive({data,ballPossession,homeTeam,awayTeam,setBallPossession,setDriveId,setDown,setDistance,setPlayAmount,setYardsDrived})\n        setBallPlace(!ballPlace)\n        console.log(\"Get Points\")\n    }else if(data.o_or_k===\"FG\" && data.kick_isgood===\"No Good\"){\n        EndMakeDrive({data,ballPossession,homeTeam,awayTeam,setBallPossession,setDriveId,setDown,setDistance,setPlayAmount,setYardsDrived})\n    }\n    // Kick Off処理\n    if (data.o_or_k ===\"Kick Off\"){\n        KickOff({data,ballOn,ballPossession,setBallOn,setBallPossession,ballPlace,setBallPlace,state})\n        // setBallPossession(!ballPossession)\n    }\n\n    // INTの処理//Fumbleの処理　=> TurnOver,BallPlace,interceptされた場所、FumbelRecoverされた場所,return_yards\n    // INT=> Pass=>INT=>INT_PLACE=>RETURN_YARDS=>TURNOVER(BALLPOSSESSIONの変化)\n    if (data.pass_iscomplete===\"Interception\" || data.result === \"Fumble\"){\n        setBallPossession(!ballPossession)\n        InterceptionFunc({data,ballPlace,ballPossession,setBallPlace,setBallPossession,setBallOn,state});\n        EndMakeDrive({data,ballPossession,homeTeam,awayTeam,setBallPossession,setDriveId,setDown,setDistance,setPlayAmount,setYardsDrived})\n    }\n\n    // ボール保持チームが変わった時の処理\n    PossessionTeam(data,ballPossession,homeTeam,awayTeam);\n\n    // Ballがどちらの陣地にあるかに関する処理\n    BallPlace(data,ballPlace,state.BallPlaceResult,homeTeam,awayTeam)\n    \n  return null\n}\n\nexport default Allprocessor\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}